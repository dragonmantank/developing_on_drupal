<?php

ini_set('display_errors', 1);
error_reporting(-1);

/**
 * Implements hook_menu().
 * We're using this just to output a form onto a page
 *
 * @return array
 */
function themed_form_menu() {
    $items = array();

    $items['themed-form'] = array(
        'type' => MENU_CALLBACK,
        'title' => t('Themed Form Example'),
        'access arguments' => array('view content'),
        // Going to use drupal_get_form to just output the form onto the page
        'page callback' => 'drupal_get_form',
        'page arguments' => array('themed_form_form'),
    );

    return $items;
}

/**
 * Implements hook_theme().
 * Here we are going to define a template to use for output, and also define an entry point to allow us to define a
 * function to allow us to control the output of the theme.
 *
 * @return array
 *   Theme definition
 */
function themed_form_theme() {
    $items = array();

    // This is the template where we will actually output the form elements. This file lives in the templates/ directory
    $items['themed_form_page'] = array(
        'template' => 'themed-form-page',
        'path' => drupal_get_path('module', 'themed_form') . '/templates',
        'arguments' => array('form' => NULL),
    );

    // This tells the system we want to theme a function, in this case 'themed_form_form'. This allows us to create a
    // theme function, called theme_themed_form_form, which will allow us to define the output of the theme. We will
    // use this in conjunction with our template file defined just above.
    // The function is called theme_themed_form_form, because we append 'theme_' to this key, which matches the function
    // we want to handle the output of.
    $items['themed_form_form'] = array(
        'render element' => 'form',
    );

    return $items;
}

/**
 * Implements hook_theme().
 * Just a basic form definition, there is nothing special here. We are going to collect the first and last names
 *
 * @param array $form
 *   Any incoming form definition
 * @param array $form_state
 *   The current form state
 *
 * @return array
 *   Form definition
 */
function themed_form_form($form, &$form_state) {
    $form = array();

    $form['first_name'] = array(
        '#type' => 'textfield',
        '#title' => 'First Name',
        '#required' => TRUE,
    );

    $form['last_name'] = array(
        '#type' => 'textfield',
        '#title' => 'Last Name',
        '#required' => TRUE,
    );

    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => 'Add Your Name'
    );

    return $form;
}

/**
 * Form submission handler form themed_form_form
 * We're going to leave this blank for the purposes of this demo, and just display a success message
 *
 * @param array $form
 *   Current form definition
 * @param $form_state
 *   Current form state
 */
function themed_form_form_submit($form, &$form_state) {
    // We're not going to actually process anything, but this is where we'd save it to a DB or whatever we need to do
    // once the form has been validated
    drupal_set_message('Thanks for signing!');
}

/**
 * Allows us to theme the themed_form_form function
 * The form definition will be passed into this function inside the $variable['form'] key. We can then use this data
 * to either stitch together HTML, or use a template file to define specific output for the form.
 *
 * @param array $variables
 *   Variables being passed into this theme
 *
 * @return string
 *   Output
 */
function theme_themed_form_form($variables) {
    // Here we are going to call our custom theme we created, and pass into it the form definition. We will return
    // the HTML that is generated by our template, and Drupal will use that as the display.
    return theme('themed_form_page', array('form' => $variables['form']));
}

/**
 * Alternate way for us to control the output of the theme
 * Many modules will stitch together HTML instead of using a template file. This function is an example of that, but is
 * commented out just so you can see it for demonstration purposes. If you'd like to use it, comment out the above
 * function definition and uncomment this one.
 *
 * @param array $variables
 *   Variables being passed to this theme
 *
 * @return string
 *   Output
 */
//function theme_themed_form_form($variables) {
//    $html = 'Our String Concatenation Output';
//    $html .= '<div class="first_name form_element">' . drupal_render($variables['form']['first_name']) . '</div>';
//    $html .= '<div class="last_name form_element">' . drupal_render($variables['form']['last_name']) . '</div>';
//    $html .= '<div class="submit_buttom form_element">' . drupal_render($variables['form']['submit']) . '</div>';
//
//    $html .= drupal_render_children($variables['form']);
//
//    return $html;
//}